VISUAL STUDIO CODE
    F1                  >   Command Palette > Comandos como clone, crear nuevos documentos como jupyter o Python.
    Ctrl + P            >   Buscador de archivos
    Ctrl + `            >   Abre y cierra terminal
    Ctrl + B            >   Cierra el bar
    Ctrl + Shift + P    >   Explorador de archivos
    Ctrl + Shift + A    >   Control de cambios
    Ctrl + K + S        >   Keyboard Shortcuts
    Ctrl + \            >   Abre mitad de una terminal
    Ctrl + ,            >   Configuracion
    Ctrl + Shift + K    >   Elimina una linea completa de codigo
    Alt + flecha arriba >   Mueve el codigo para arriba o abajo
    Ctrl + shift + [    >   Contraer codigo
    Alt + Z             >   Ajuste de palabra
    .ipynb              >   Archivos jupyter

GIT
        https://www.youtube.com/watch?v=iT4UOkyI09k
    Git init
    Git log                                 > ver los commints
    Git add .                               > Lee todos los archivos y los prepara para la fotografia (commint > A[ya no estara en U]) en l rama maestra
    Git commit -m "(nombre de commit)"      > Poner nombre al repositorio
    Git status                              > Revisar el status de los archivos
    Git checkout (hash)                     > Para volver al commit anterior usando el Hash
    Git log                                 > Ver hash largo > Tirar luego de usar "Branch" para ver si volvio a la normalidad
    Git log --oneline                       > ver hash de los commints de manera corta
    Git branch                              > Visualiza las ramas dentro de GIT
    git switch master                       > Volver a la rama principal
    Git checkout -b "(nombre de la rama)"   > Crea una rama dentro de la rama maestra
    Git reset .                             > Revierte todo lo que hace git add .
    git revert (hash)                       > Deshace cambios de un commit.
    git reset HEAD / git reset HEAD^ --hard > Revierte todo a los heads
    Git checkout -- .                       > Restaura la informacion como estuvo en el ultimo commint, tambien restaura archivos eliminados.
    Git commit --amend + Enter(2)           > Arregla el nombre del commint 
    Git reset (hash)                        > Reset al commint anterior (elimina los futuros)
    Git reset --hard (hash)                 > Resetea de todos los docuemntos de ese documento > TENER CUIDADO AL USAR SI ESTA SINCRONIZADO CON EQUIPOS
    W + Q                                   > Guardar y salir 

GIT A GITHUB
    Git remote add origin (link de GitHub)  > Conectar Git con GitHub
    Git push origin master                  > Subir la rama master a GitHub

CONSOLA HTML WEB
        https://www.notion.so/WEB-SCRAPING-PARA-PRINCIPIANTES-EN-PYTHON-c3e6bcfedf03480ea795836a5cc2edce
        https://devhints.io/xpath
   
   Ctrl + L                 > Limpiar consola
   
    $x('...//text()').map(x=>x.wholeText)    > Especificar la parte del codigo  > Ej. $x("//div/h4/text()").map(x=>x.wholeText)

    RAPPI
    $x('//div//span[@class="sc-bdVaJa dQsGrP"]//text()').map(x=>x.wholeText)                                                            > PRICE
    $x('//div//div[@class="styles__PriceoContainer-sc-jkotxm-5 dxkArC"]//span[@class="sc-bdVaJa dQsGrP"]//text()').map(x=>x.wholeText)  > Se utiloza [@class="sc-bdVaJa dQsGrP"] para perfeccionar la busqueda
    $x('//div//h4//text()').map(x=>x.wholeText)                                                                                         > TITULO

CMD
    cls                                 > Limpiar la ventana
    pip install --upgrade pip           > Actualizar Pip > Si aparece error usar el siguiente: python -m pip install -U pip --user
    pip-review --local --interactive    > Actualiza todos mis librerias Python
    python -m pip install (libreria)    > Instalar libreria
    
$x("//div/h4/text()").map(x=>x.wholeText)
